(define (cycle? x)
  (define (cycle-helper fast slow)
    (cond ((null? fast) #f)
          ((null? (cdr fast)) #f)
          ((eq? (cdr fast) slow) #t)
          ((null? (cddr fast)) #f)
          ((eq? (cddr fast) slow) #t)
          (else (cycle-helper (cddr fast) (cdr slow)))))
  (cycle-helper x x))
(define x '(1 2 3))
(set-cdr! (cddr x) x)
(cycle? x)
(cycle? '(1 2 3))
