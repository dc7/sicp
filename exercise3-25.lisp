(define (make-table)
  (list '*table*))
(define (lookup keys table)
  (if (null? keys)
    (cdr table)
    (lookup (cdr keys) (assoc (car keys) (cdr table)))))
(define (insert! keys value table)
  (if (null? keys)
    (set-cdr! table value)
    (let ((subtable (assoc (car keys) (cdr table))))
      (if subtable
        (insert! (cdr keys) value (cdr subtable))
        (let ((new-list (cons (cons (car keys) '())
                              (cdr table))))
          (set-cdr! table new-list)
          (insert! (cdr keys) value (car new-list))))))
  'ok)

(define t (make-table))
(insert! '(a b) 'c t)
(insert! '(a d) 'e t)
(insert! '(f g) 'h t)
(lookup '(a b) t)
